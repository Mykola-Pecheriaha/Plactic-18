name: Branch Protection Rules

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  protect-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g @octokit/rest
          npm install -g typescript

      - name: Configure branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          cat > setup-protection.ts << 'EOL'
          import { Octokit } from '@octokit/rest';

          async function setupBranchProtection() {
            const octokit = new Octokit({
              auth: process.env.GITHUB_TOKEN
            });

            const owner = process.env.REPO_OWNER!;
            const repo = process.env.REPO_NAME!;

            // Захист для main гілки
            await octokit.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: ['build', 'test']
              },
              enforce_admins: true,
              required_pull_request_reviews: {
                dismissal_restrictions: {},
                dismiss_stale_reviews: true,
                require_code_owner_reviews: true,
                required_approving_review_count: 1
              },
              restrictions: null
            });

            // Захист для develop гілки
            await octokit.repos.updateBranchProtection({
              owner,
              repo,
              branch: 'develop',
              required_status_checks: {
                strict: true,
                contexts: ['build', 'test']
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                dismissal_restrictions: {},
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false,
                required_approving_review_count: 1
              },
              restrictions: null
            });

            console.log('Branch protection rules have been set up successfully!');
          }

          setupBranchProtection().catch(console.error);
          EOL

          npx ts-node setup-protection.ts 